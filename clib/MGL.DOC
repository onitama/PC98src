/*---------------------------------------------------------------------------
	ＭＧＬヘルプドキュメント
	pc98 mag graphic load interface "mgl.h" / 1993(c) onion software
	'mgl.h' , 'mgl.obj' , "mgl.inc"
---------------------------------------------------------------------------*/

	"MGL" ('mgl.obj') は、PC9801上でMAG形式グラフィックの展開をサポート
	するturboＣ(++)用の制御関数群です。
	使用する場合は、画面初期化とパレット設定、ファイルロードのための
	mgint.hも含めて、

		#include <stdio.h>
		#include <fcntl.h>
		#include <dos.h>
		#include "mgint.h"		; use graphics interface
		#include "mgint.inc"
		#include "mgl.h"		; use mag loader
		#include "mgl.inc"

	のファイルを最初にインクルードしておく必要があります。
	（ gint.h で使用する場合は mgl.inc に若干の変更が必要です）
	必ずスモールモデルでコンパイルして下さい。

	例:（コマンドラインから）
	　"mgl.h","mgint.h"を使う場合は、2つのオブジェクトファイルを
	　リンクします。

		tcc -ms test.c mgint.obj mgl.obj
					 ^^^^^^^


	/*-------------------------------------------------------------------
		users guide
	-------------------------------------------------------------------*/

	このモジュールでは、PC98のグラフィック（640x400( 16color )）圧縮形式
	の中でもポピュラーなMAG形式を展開、表示します。
	MAG形式はサイズ，色数なども自由に設定できるようになっていますが、
	このモジュールでは完全にサポートされていません。
	展開されるデータは以下の制限があります。

	・640x400ドット以内のデータであること。
	・Ｘ方向のサイズは64(dot)の倍数であること。つまり、Ｘ方向のサイズは
	　64,128,192,256,320,384,448,512,576,640(dot)の10種類に限られます。
	・アナログ16色であること（8色,256色は不可）。
	・ファイルサイズが64K（65536bytes）以下であること。
	・表示開始位置の情報は無視されます。


	/*-------------------------------------------------------------------
		command reference of "mgint.h"
	-------------------------------------------------------------------*/

	◎MAGファイルロードと展開
		int magload( char *name, int buff1, int buff2, int xx, int yy );

		*fname	  = ファイル名（文字列PTR.）
		buff1	  = 読み込むバッファのセグメントアドレス
		buff2	  = 作業用バッファのセグメントアドレス
		xx	  = 表示するＸ座標（0〜639）
		yy	  = 表示するＹ座標（0〜399）

		返り値	  : 	0  正常終了
				1  エラー（指定したファイルが存在しない）
				2  エラー（MAGファイルではない）

	　MAG形式のグラフィック（MAX 640x400,16color）のデータを展開します。
	　ファイル名とバッファになるメモリのセグメントアドレスをパラメータで
	　渡す必要があります。
	　ファイル名は拡張子まですべて正しく指定して下さい。
	　バッファに使うセグメントアドレスは、あらかじめ allocmem で領域を
	　確保しておいた時の値になります。（メモリ確保は malloc ではなく、
	　allocmem で行なって下さい）
	　buff1 は、読みこみに使われるバッファで、ロードするファイルのサイズに
	　合わせて領域を確保して下さい。最大で64K（65536bytes）までです。
	　buff2 は、展開作業に使うためのバッファで、最低でも8K（8192bytes）
	　以上確保しておいて下さい（使用される領域は 0000H〜1FFFH までです）。

	　ファイルを読み込むと、画面にグラフィックが展開され、アナログパレット
	　の情報が、set_paletによってセットされます。
	　展開される大きさはMAGでセーブする際に指定して下さい。
	　展開する場所の左上の座標をXX,YYで指定できます。ただし、XXは8ドット
	　単位でそれ以下の情報は無視されます。

	　この関数は MGL.INC に含まれているので、パレット指定など、変更や改造
	　することが可能です。


	◎MAGデータ展開
		int mgl_open( int p_seg, int b_seg, int v_ofs );

		buff1	  = MAGデータのあるセグメントアドレス
		buff2	  = 作業用バッファのセグメントアドレス
		v_ofs	  = 表示する位置のオフセット（0〜32767）

		返り値	  : 	-1  エラー（MAG形式のデータではない）
			　　その他  MAGヘッダーのオフセットアドレス

	　MAG形式のグラフィック（MAX 640x400,16color）のデータを展開します。
	　バッファになるメモリのセグメントアドレスをパラメータで渡す必要が
	　あります。
	　バッファの指定は、magload と同様です。この関数では、グラフィック
	　画面への展開のみを行ないます（パレット設定はしません）。
	　通常の使用では、magload を使用して下さい。


	◎MAGデータ展開（バッファのみ）
		int mgl_pbuf( int p_seg, int b_seg );

		buff1	  = MAGデータのあるセグメントアドレス
		buff2	  = 作業用バッファのセグメントアドレス

		返り値	  : 	-1  エラー（MAG形式のデータではない）
			　　その他  MAGヘッダーのオフセットアドレス

	　MAG形式ののデータを展開しますが、画面には表示しません。指定した
	　バッファにデータが残るだけになります。主に WPD.H（画像回転，拡大
	　モジュール）で使用するための画像データとして読みこむ場合に使用され
	　通常はまず使用する必要はありません。
	　バッファになるメモリのセグメントアドレス指定は mgl_open と同じ
	　になります。


	◎MGL特殊設定
		mgl_set( int max_x, int max_y, int skip_x, int buf_size );

		max_x	  = 最大Ｘ方向サイズ（0〜639）
		max_y	  = 最大Ｙ方向サイズ（0〜399）
		skip_x	  = １ラインに取るバッファのサイズ（128,256,512,1024）
		buf_size  = バッファ全体のサイズ（0,0x1000,0x2000,0x4000…）

	　この関数は、まず通常は使用しません。画像のサイズを一定以内に
	　おさめたり、MAGデータのピクセルデータを記憶しておくバッファの
	　サイズを変更するために使用されます。
	　この特殊設定は、主に WPD.H（画像回転，拡大モジュール）で使用する
	　ための画像データとして読みこむ場合に変更されます。
	　それ以外での使用方法としては、Ｘ方向やＹ方向の最大サイズに納める
	　場合に使用できます。（指定したサイズより大きな画像は一部だけが
	　表示されます）
	　デフォルトのパラメーターは、

		mgl_set( 639,399,512,0x2000 );

	　になっています。


	/*-------------------------------------------------------------------
		copyright
	-------------------------------------------------------------------*/

	'mgl.h','mgl.obj'		(c)1993 onion software
	MAG format created		By Woody RINN (MAKIchanNET #03)


/*---------------------------------------------------------------------------
	pc98 mag loader module "mgl.h" / 1993 (c) onion software
	Brief information of 'mgl.obj'
---------------------------------------------------------------------------*/



	.model	tiny

;-------------------------------------------------
;	xkd format unpack routine
;-------------------------------------------------

data_top	equ 0b000h

WSEG		EQU 5768H
VRAM0		EQU 0A800H
VRAM1		EQU 0B000H
VRAM2		EQU 0B800H
BIT_ON		EQU BYTE PTR 0FFH
BIT_OFF		EQU BYTE PTR 0

	org	0


	.CODE
	;
	;

	PUBLIC	xkd_put

xkd_put:
	push	si
	push	di
	call	grput
	pop	di
	pop	si
	ret

KADDRES:
	MOV AH,0
	MOV AL,CSRY
	MOV DL,5
	MUL DL
	MOV AH,AL
	MOV AL,CSRX
	MOV PUTAD,AX
	RET

GRPUT:
	IN AL,0A0H	; CRCT WAIT
	TEST AL,04H
	JE GRPUT
	PUSH AX
	PUSH AX
	POP AX
	POP AX
VWAITGR:
	IN AL,0A0H
	TEST AL,08H
	JNE VWAITGR

	MOV DI,DATA_TOP
	MOV AX,[DI]+3
	ADD AX,DI
	MOV TILE_TOP,AX   ;タイルデータ先頭
	MOV AX,[DI]+5
	ADD AX,DI
	MOV FILE_END,AX   ;終了アドレス
	MOV AL,[DI]+09H
	MOV NULL_COLOR,AL ;透明色
	MOV AL,[DI]+1
	MOV WIDECT,AL	;横バイト数
	MOV AL,[DI]+2
	SHR AL,1	;/2
	
	MOV LINECT,AL	;縦ライン数
	MOV AX,DATA_TOP
	ADD AX,10H
	MOV LOOK_AD,AX	;参照アドレス
	DEC CSRX
	DEC CSRY
	CALL KADDRES
	MOV AX,PUTAD
	;MOV AX,0
	MOV POKE_AD,AX	;書き込むアドレス
	MOV BASE_AD,AX
	MOV AX,0
	MOV LINEOF,AL
	MOV WIDEOF,AL
	JMP GRLOOP

eogr:
	ret

GRLOOP:	
	MOV BX,LOOK_AD
	MOV AL,[BX]
	
	CMP BX,FILE_END
	JZ EOGR
	
	INC BX
	
	CMP BX,FILE_END
	JZ EOGR
	
	TEST AL,80H
	JZ NOARC
	;ARC
	AND AL,7FH
	MOV GRCT,AL
	MOV AL,[BX]
	INC BX
	MOV LOOK_AD,BX
	
	MOV AH,0

	ADD AX,AX ;*2
	MOV CX,AX
	ADD AX,AX ;*4
	ADD AX,CX
	
	ADD AX,TILE_TOP
	MOV TILE_BUF,AX
GRLOOP2:
	MOV AX,TILE_BUF
	MOV TILE_AD,AX
	CALL GRSUB
	JC EOGR
	DEC GRCT
	JNZ GRLOOP2
	JMP GRLOOP
NOARC:
	MOV GRCT,AL
	MOV TILE_AD,BX
GRLOOP3:
	CALL GRSUB
	JC EOGR
	DEC GRCT
	JNZ GRLOOP3
	
	MOV AX,TILE_AD
	MOV LOOK_AD,AX	
	JMP GRLOOP



NULL_CC:
	MOV AL,0
	JMP NULL_FK
GRPART:
	
	;TILE_AD POKE_AD
	;ライト
	
	MOV AL,NULL_COLOR
	CMP AL,0FFH	;透明色なし（０ＦＦＨ）
	JZ NULL_CC

	TEST AL,1	;VRAM0
	JZ GR1
	MOV AH,BIT_ON
	JMP GR2
GR1:
	MOV AH,BIT_OFF
GR2:
	MOV GRW0,AH
	TEST AL,2	;VRAM1
	JZ GR3
	MOV AH,BIT_ON
	JMP GR4
GR3:
	MOV AH,BIT_OFF
GR4:
	MOV GRW1,AH
	TEST AL,4	;VRAM2
	JZ GR5
	MOV AH,BIT_ON
	JMP GR6
GR5:
	MOV AH,BIT_OFF
GR6:
	MOV GRW2,AH
	
	
	MOV DI,TILE_AD
	MOV AH,[DI]
	XOR GRW0,AH
	
	MOV AH,[DI]+1
	XOR GRW1,AH
	
	MOV AH,[DI]+2
	XOR GRW2,AH
	
	MOV AL,GRW2
	OR AL,GRW1
	OR AL,GRW0
	NOT AL
NULL_FK:
	MOV DI,POKE_AD
	MOV MASK_BIT,AL ;MASK=1 / NO MASK=0
	MOV GRW0,AL
	MOV GRW1,AL
	MOV GRW2,AL
	
	MOV DX,VRAM0
	MOV ES,DX
	MOV AH,ES:[DI]
	AND CS:GRW0,AH	; MASK AND GRPHIC
	;のこすグラフイック
	MOV DX,VRAM1
	MOV ES,DX
	MOV AH,ES:[DI]
	AND CS:GRW1,AH
	
	MOV DX,VRAM2
	MOV ES,DX
	MOV AH,ES:[DI]
	AND CS:GRW2,AH
	
	MOV DX,CS
	MOV ES,DX
	
	MOV AL,MASK_BIT
	NOT AL
	MOV BL,AL	
	;MASK AND GRAM OR /MASK AND GRAM ->GRAM
	
	MOV SI,TILE_AD
	MOV AH,CS:[SI]
	INC SI
	AND AL,AH
	OR AL,GRW0
	MOV DX,VRAM0	;VRAM0
	MOV ES,DX
	MOV ES:[DI],AL
	MOV ES:[DI]+80,AL
	
	MOV AL,BL
	MOV AH,CS:[SI]
	INC SI
	AND AL,AH
	OR AL,GRW1
	MOV DX,VRAM1
	MOV ES,DX
	MOV ES:[DI],AL
	MOV ES:[DI]+80,AL
	
	MOV AL,BL
	MOV AH,CS:[SI]
	INC SI
	AND AL,AH
	OR AL,GRW2
	MOV DX,VRAM2
	MOV ES,DX
	MOV ES:[DI],AL
	MOV ES:[DI]+80,AL
	
	MOV DX,CS
	MOV ES,DX
	MOV TILE_AD,SI
	RET
GRSUB:
	CLC
	CALL GRPART
	MOV AX,POKE_AD
	ADD AX,160
	MOV POKE_AD,AX
	CALL GRPART
	MOV AX,POKE_AD
	ADD AX,160
	MOV POKE_AD,AX
	;縦ＩＮＣ
	MOV AL,LINEOF
	INC AL
	CMP AL,LINECT
	JNZ UN_OVER
	MOV AL,0
	MOV LINEOF,AL	;TATE OVER
	;アドレスＩＮＣ
	MOV AX,BASE_AD
	INC AX
	MOV BASE_AD,AX
	MOV POKE_AD,AX
		
	MOV AL,WIDEOF
	INC AL
	CMP AL,WIDECT
	JNZ UN_OVER2
	STC
	RET
UN_OVER:
	MOV LINEOF,AL
	CLC
	RET
UN_OVER2:
	MOV WIDEOF,AL
	CLC
	RET



;-------------------------------------------------
;	data segment
;-------------------------------------------------


PUTAD		DW 0
TILE_TOP	DW 0
FILE_END	DW 0
LOOK_AD		DW 0
NULL_COLOR	DB 0
WIDECT		DB 0
LINECT		DB 0
WIDEOF		DB 0	;横位置オフセット　０−（ＷＩＤＥＣＴ−１）
LINEOF		DB 0	;縦
GRCT		DB 0
TILE_AD		DW 0
POKE_AD		DW 0
BASE_AD		DW 0
CSRX		DB 1	;内部用Ｘ座標
CSRY		DB 1	;　　　Ｙ座標

TEMPP		DB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0

TILE_BUF	DW 0
DUMY		DB 0,255,255,0,255,255
GRW0		DB 0
GRW1		DB 0
GRW2		DB 0
MASK_BIT	DB 0


	end
